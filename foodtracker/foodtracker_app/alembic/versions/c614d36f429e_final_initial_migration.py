"""Final initial migration

Revision ID: c614d36f429e
Revises:
Create Date: 2025-06-28 06:20:04.798343

"""

from typing import Sequence, Union
import foodtracker_app
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c614d36f429e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("icon_name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_categories_id"), "categories", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("verification_token", sa.String(), nullable=True),
        sa.Column(
            "token_expires_at", foodtracker_app.db.database.TZDateTime(), nullable=True
        ),
        sa.Column("reset_password_token", sa.String(), nullable=True),
        sa.Column(
            "reset_password_expires_at",
            foodtracker_app.db.database.TZDateTime(),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            foodtracker_app.db.database.TZDateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("avatar_url", sa.String(), nullable=True),
        sa.Column("social_provider", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "pantries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            foodtracker_app.db.database.TZDateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pantries_id"), "pantries", ["id"], unique=False)
    op.create_table(
        "financial_stats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pantry_id", sa.Integer(), nullable=False),
        sa.Column(
            "saved_value",
            sa.Numeric(precision=10, scale=2),
            server_default="0.00",
            nullable=False,
        ),
        sa.Column(
            "wasted_value",
            sa.Numeric(precision=10, scale=2),
            server_default="0.00",
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["pantry_id"],
            ["pantries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("pantry_id"),
    )
    op.create_table(
        "pantry_users",
        sa.Column("pantry_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pantry_id"],
            ["pantries.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("pantry_id", "user_id"),
    )
    op.create_table(
        "products",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("expiration_date", sa.Date(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.Column("pantry_id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("unit", sa.String(length=10), nullable=False),
        sa.Column("initial_amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("current_amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "wasted_amount",
            sa.Numeric(precision=10, scale=2),
            server_default="0.00",
            nullable=False,
        ),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.CheckConstraint(
            "current_amount + wasted_amount <= initial_amount",
            name="check_amounts_lte_initial",
        ),
        sa.CheckConstraint(
            "current_amount >= 0", name="check_current_amount_non_negative"
        ),
        sa.CheckConstraint(
            "wasted_amount >= 0", name="check_wasted_amount_non_negative"
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pantry_id"],
            ["pantries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_products_id"), "products", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_products_id"), table_name="products")
    op.drop_table("products")
    op.drop_table("pantry_users")
    op.drop_table("financial_stats")
    op.drop_index(op.f("ix_pantries_id"), table_name="pantries")
    op.drop_table("pantries")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_categories_id"), table_name="categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
